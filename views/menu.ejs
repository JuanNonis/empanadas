<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Menú - Pizzas y Empanadas</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="/styles.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Luckiest+Guy&family=Pacifico&display=swap" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <style>
    .menu-card {
      aspect-ratio: 1;
      transition: all 0.3s ease;
      border: 1px solid rgba(0,0,0,0.12);
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      overflow: hidden;
    }
    
    .menu-card:hover {
      transform: translateY(-10px);
      box-shadow: 0 8px 25px rgba(0,0,0,0.2);
      border: 1px solid rgba(0,0,0,0.12);
    }
    
    .menu-img {
      width: 100%;
      height: 60%;
      object-fit: cover;
      border-bottom: 1px solid #eee;
    }
    
    .card-content {
      height: 40%;
      padding: 1rem;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }
    
    .card-title {
      font-size: 1.1rem;
      margin-bottom: 0.5rem;
      color: #333;
    }
    
    .card-price {
      font-size: 1.2rem;
      font-weight: bold;
      color: #28a745;
      margin-bottom: 0.5rem;
    }
    
    .card-description {
      font-size: 0.9rem;
      color: #666;
      line-height: 1.4;
      margin: 0;
    }
    
    .sidebar-filters {
      position: sticky;
      top: 20px;
      border: 1px solid #dee2e6;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      min-width: 140px;
    }
    
    .filter-btn {
      transition: all 0.3s ease;
      border-radius: 8px;
      font-size: 0.9rem;
      padding: 0.5rem 0.75rem;
    }
    
    .filter-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }
    
    .filter-btn.active {
      transform: scale(1.05);
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    }
    
    .menu-item {
      transition: all 0.3s ease;
    }
    
    .menu-item.hidden {
      display: none !important;
    }
    
    .menu-item.visible {
      animation: fadeIn 0.5s ease-in;
    }
    
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
    .add-to-cart-btn {
      background: linear-gradient(45deg, #28a745, #20c997);
      border: none;
      color: white;
      padding: 0.5rem;
      border-radius: 50%;
      font-weight: bold;
      cursor: pointer;
      transition: all 0.3s ease;
      width: 40px;
      height: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.1rem;
    }
    
    .add-to-cart-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
    }
    
    .add-to-cart-btn:active {
      transform: translateY(0);
    }
    
    .quantity-controls {
      display: flex;
      align-items: center;
      gap: 0.3rem;
    }
    
    .quantity-btn {
      width: 25px;
      height: 25px;
      border-radius: 50%;
      border: none;
      background: #007bff;
      color: white;
      font-weight: bold;
      cursor: pointer;
      transition: all 0.3s ease;
      font-size: 0.8rem;
    }
    
    .quantity-btn:hover {
      background: #0056b3;
      transform: scale(1.1);
    }
    
    .quantity-display {
      font-size: 0.9rem;
      font-weight: bold;
      min-width: 20px;
      text-align: center;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg mb-4">
    <div class="container">
      <a class="navbar-brand d-flex align-items-center gap-2" href="/">
        <img src="/logo.png" alt="Logo" style="width:40px; height:auto;">
        Pizzas y Empanadas
      </a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item"><a class="nav-link" href="/">Inicio</a></li>
          <li class="nav-item"><a class="nav-link" href="/menu">Menú</a></li>
          <li class="nav-item">
            <a class="nav-link position-relative" href="/carrito" id="cart-link">
              <i class="fas fa-shopping-cart"></i> Carrito
              <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" id="cart-badge" style="display: none;">
                0
              </span>
            </a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  <div class="container-fluid mt-5">
    <h1 class="text-center mb-5">Nuestro Menú - Pizzas y Empanadas</h1>
    
    <div class="row">
      <!-- Sidebar con filtros -->
      <div class="col-md-2">
        <div class="sidebar-filters p-2 bg-light rounded">
          <h5 class="mb-3 text-center">Categorías</h5>
          <div class="d-grid gap-2">
            <button class="btn btn-outline-primary filter-btn active" data-filter="todos">
              <i class="fas fa-utensils me-1"></i>Todos
            </button>
            <button class="btn btn-outline-success filter-btn" data-filter="promos">
              <i class="fas fa-tags me-1"></i>Promos
            </button>
            <button class="btn btn-outline-warning filter-btn" data-filter="empanadas">
              <i class="fas fa-bread-slice me-1"></i>Empanadas
            </button>
            <button class="btn btn-outline-danger filter-btn" data-filter="pizzas">
              <i class="fas fa-pizza-slice me-1"></i>Pizzas
            </button>
          </div>
        </div>
      </div>
      
      <!-- Contenido del menú -->
      <div class="col-md-10">
        <div class="row g-4" id="menu-container">
          <!-- Productos del menú dinámico -->
          <% if (menu && menu.length) { %>
            <% menu.forEach((item, index) => { %>
              <div class="col-md-6 col-lg-4 d-flex justify-content-center menu-item" data-category="<%= index % 3 === 2 ? 'pizzas' : 'empanadas' %>">
                <div class="card menu-card" style="width: 280px;">
                  <img src="<%= ['/empanada1.jpg', '/empanada2.jpg', '/pizza.jpg'][index % 3] %>" class="menu-img" alt="<%= item.nombre %>">
                  <div class="card-content">
                    <div>
                      <h5 class="card-title"><%= item.nombre %></h5>
                      <p class="card-description"><%= item.descripcion %></p>
                    </div>
                                         <div class="d-flex justify-content-between align-items-center">
                       <div class="card-price">$<%= (item.precio / 100).toFixed(2) %></div>
                       <button class="add-to-cart-btn" data-name="<%= item.nombre %>" data-description="<%= item.descripcion %>" data-price="<%= item.precio %>" data-image="<%= ['/empanada1.jpg', '/empanada2.jpg', '/pizza.jpg'][index % 3] %>" data-index="<%= index %>">
                         <i class="fas fa-cart-plus"></i>
                       </button>
                       <div class="quantity-controls" style="display: none;" id="quantity-<%= index %>">
                         <button class="quantity-btn" onclick="updateQuantity('<%= index %>', -1)">-</button>
                         <span class="quantity-display" id="qty-<%= index %>">1</span>
                         <button class="quantity-btn" onclick="updateQuantity('<%= index %>', 1)">+</button>
                       </div>
                     </div>
                  </div>
                </div>
              </div>
            <% }) %>
          <% } %>
          
          <!-- Tarjetas adicionales -->
          <div class="col-md-6 col-lg-4 d-flex justify-content-center menu-item" data-category="empanadas">
            <div class="card menu-card" style="width: 280px;">
              <img src="/empanada1.jpg" class="menu-img" alt="Docena de Empanadas">
              <div class="card-content">
                <div>
                  <h5 class="card-title">Docena de Empanadas</h5>
                  <p class="card-description">12 empanadas surtidas de tu elección.</p>
                </div>
                                 <div class="d-flex justify-content-between align-items-center">
                   <div class="card-price">$24.00</div>
                   <button class="add-to-cart-btn" data-name="Docena de Empanadas" data-description="12 empanadas surtidas de tu elección." data-price="2400" data-image="/empanada1.jpg" data-index="docena">
                     <i class="fas fa-cart-plus"></i>
                   </button>
                   <div class="quantity-controls" style="display: none;" id="quantity-docena">
                     <button class="quantity-btn" onclick="updateQuantity('docena', -1)">-</button>
                     <span class="quantity-display" id="qty-docena">1</span>
                     <button class="quantity-btn" onclick="updateQuantity('docena', 1)">+</button>
                   </div>
                 </div>
              </div>
            </div>
          </div>
          
          <div class="col-md-6 col-lg-4 d-flex justify-content-center menu-item" data-category="empanadas">
            <div class="card menu-card" style="width: 280px;">
              <img src="/empanada2.jpg" class="menu-img" alt="Media Docena de Empanadas">
              <div class="card-content">
                <div>
                  <h5 class="card-title">Media Docena de Empanadas</h5>
                  <p class="card-description">6 empanadas surtidas de tu elección.</p>
                </div>
                                 <div class="d-flex justify-content-between align-items-center">
                   <div class="card-price">$13.50</div>
                   <button class="add-to-cart-btn" data-name="Media Docena de Empanadas" data-description="6 empanadas surtidas de tu elección." data-price="1350" data-image="/empanada2.jpg" data-index="media-docena">
                     <i class="fas fa-cart-plus"></i>
                   </button>
                   <div class="quantity-controls" style="display: none;" id="quantity-media-docena">
                     <button class="quantity-btn" onclick="updateQuantity('media-docena', -1)">-</button>
                     <span class="quantity-display" id="qty-media-docena">1</span>
                     <button class="quantity-btn" onclick="updateQuantity('media-docena', 1)">+</button>
                   </div>
                 </div>
              </div>
            </div>
          </div>
          
          <!-- Nueva tarjeta de Promos -->
          <div class="col-md-6 col-lg-4 d-flex justify-content-center menu-item" data-category="promos">
            <div class="card menu-card" style="width: 280px;">
              <img src="/empanada+bebida2.png" class="menu-img" alt="Combo 3 Empanadas + Bebida">
              <div class="card-content">
                <div>
                  <h5 class="card-title">Combo 3 Empanadas + Bebida</h5>
                  <p class="card-description">3 empanadas más bebida de 500ml.</p>
                </div>
                                 <div class="d-flex justify-content-between align-items-center">
                   <div class="card-price">$18.00</div>
                   <button class="add-to-cart-btn" data-name="Combo 3 Empanadas + Bebida" data-description="3 empanadas más bebida de 500ml." data-price="1800" data-image="/empanada+bebida2.png" data-index="combo">
                     <i class="fas fa-cart-plus"></i>
                   </button>
                   <div class="quantity-controls" style="display: none;" id="quantity-combo">
                     <button class="quantity-btn" onclick="updateQuantity('combo', -1)">-</button>
                     <span class="quantity-display" id="qty-combo">1</span>
                     <button class="quantity-btn" onclick="updateQuantity('combo', 1)">+</button>
                   </div>
                 </div>
              </div>
            </div>
          </div>
        </div>
        
        <div class="text-center mt-5">
          <a href="/" class="btn btn-secondary">Volver al Inicio</a>
        </div>
      </div>
    </div>
  </div>
  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  
  <script>
    // Funcionalidad de filtrado del menú
    document.addEventListener('DOMContentLoaded', function() {
      const filterButtons = document.querySelectorAll('.filter-btn');
      const menuItems = document.querySelectorAll('.menu-item');
      
      // Función para filtrar productos
      function filterProducts(category) {
        menuItems.forEach(item => {
          const itemCategory = item.getAttribute('data-category');
          
          if (category === 'todos' || itemCategory === category) {
            item.classList.remove('hidden');
            item.classList.add('visible');
          } else {
            item.classList.add('hidden');
            item.classList.remove('visible');
          }
        });
      }
      
      // Event listeners para los botones de filtro
      filterButtons.forEach(button => {
        button.addEventListener('click', function() {
          // Remover clase active de todos los botones
          filterButtons.forEach(btn => btn.classList.remove('active'));
          
          // Agregar clase active al botón clickeado
          this.classList.add('active');
          
          // Obtener la categoría del filtro
          const filterCategory = this.getAttribute('data-filter');
          
          // Aplicar el filtro
          filterProducts(filterCategory);
        });
      });
      
      // Mostrar todos los productos por defecto
      filterProducts('todos');
    });
    
    // Funcionalidad del carrito
    let cartQuantities = {};
    
    // Función para obtener el carrito del localStorage
    function getCart() {
      const cart = localStorage.getItem('cart');
      return cart ? JSON.parse(cart) : [];
    }
    
    // Función para guardar el carrito en localStorage
    function saveCart(cart) {
      localStorage.setItem('cart', JSON.stringify(cart));
      updateCartBadge();
    }
    
    // Función para actualizar el badge del carrito
    function updateCartBadge() {
      const cart = getCart();
      const badge = document.getElementById('cart-badge');
      const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
      
      if (totalItems > 0) {
        badge.textContent = totalItems;
        badge.style.display = 'block';
      } else {
        badge.style.display = 'none';
      }
    }
    
    // Función para agregar al carrito
    function addToCart(name, description, price, image, index) {
      const cart = getCart();
      const existingItem = cart.find(item => item.name === name);
      
      if (existingItem) {
        existingItem.quantity += 1;
      } else {
        cart.push({
          name: name,
          description: description,
          price: parseInt(price),
          image: image,
          quantity: 1
        });
      }
      
      saveCart(cart);
      
             // Mostrar controles de cantidad
       const quantityControls = document.getElementById(`quantity-${index}`);
       const addButton = event.target.closest('.add-to-cart-btn');
       
       if (quantityControls && addButton) {
         quantityControls.style.display = 'flex';
         addButton.style.display = 'none';
         updateQuantityDisplay(index, cart.find(item => item.name === name).quantity);
       }
      
      // Mostrar notificación
      showNotification(`${name} agregado al carrito!`);
    }
    
    // Función para actualizar cantidad
    function updateQuantity(index, change) {
      const cart = getCart();
      const itemName = getItemNameByIndex(index);
      const item = cart.find(item => item.name === itemName);
      
      if (item) {
        item.quantity += change;
        
                 if (item.quantity <= 0) {
           // Remover del carrito
           const itemIndex = cart.findIndex(cartItem => cartItem.name === itemName);
           cart.splice(itemIndex, 1);
           
                       // Ocultar controles de cantidad y mostrar botón de agregar
            const quantityControls = document.getElementById(`quantity-${index}`);
            const addButton = quantityControls.parentElement.querySelector('.add-to-cart-btn');
            
            if (quantityControls && addButton) {
              quantityControls.style.display = 'none';
              addButton.style.display = 'flex';
            }
         } else {
           updateQuantityDisplay(index, item.quantity);
         }
        
        saveCart(cart);
      }
    }
    
    // Función para obtener el nombre del item por índice
    function getItemNameByIndex(index) {
      const buttons = document.querySelectorAll('.add-to-cart-btn');
      for (let button of buttons) {
        if (button.getAttribute('data-index') === index) {
          return button.getAttribute('data-name');
        }
      }
      return null;
    }
    
    // Función para actualizar el display de cantidad
    function updateQuantityDisplay(index, quantity) {
      const qtyDisplay = document.getElementById(`qty-${index}`);
      if (qtyDisplay) {
        qtyDisplay.textContent = quantity;
      }
    }
    
    // Función para mostrar notificación
    function showNotification(message) {
      // Crear notificación
      const notification = document.createElement('div');
      notification.className = 'alert alert-success position-fixed';
      notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
      notification.innerHTML = `
        <i class="fas fa-check-circle me-2"></i>
        ${message}
      `;
      
      document.body.appendChild(notification);
      
      // Remover después de 3 segundos
      setTimeout(() => {
        notification.remove();
      }, 3000);
    }
    
    // Event listeners para botones de agregar al carrito
    document.addEventListener('DOMContentLoaded', function() {
      updateCartBadge();
      
      // Agregar event listeners a todos los botones de agregar al carrito
      const addToCartButtons = document.querySelectorAll('.add-to-cart-btn');
      addToCartButtons.forEach(button => {
        button.addEventListener('click', function() {
          const name = this.getAttribute('data-name');
          const description = this.getAttribute('data-description');
          const price = this.getAttribute('data-price');
          const image = this.getAttribute('data-image');
          const index = this.getAttribute('data-index');
          
          addToCart(name, description, price, image, index);
        });
      });
      
      // Verificar si hay items en el carrito para mostrar controles de cantidad
      const cart = getCart();
      cart.forEach(item => {
        const buttons = document.querySelectorAll('.add-to-cart-btn');
        buttons.forEach(button => {
          if (button.getAttribute('data-name') === item.name) {
            const index = button.getAttribute('data-index');
            const quantityControls = document.getElementById(`quantity-${index}`);
            
            if (quantityControls) {
              quantityControls.style.display = 'flex';
              button.style.display = 'none';
              updateQuantityDisplay(index, item.quantity);
            }
          }
        });
      });
    });
  </script>
</body>
</html> 